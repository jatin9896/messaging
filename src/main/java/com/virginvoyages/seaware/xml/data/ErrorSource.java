//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.06.29 at 03:39:13 PM IST 
//


package com.virginvoyages.seaware.xml.data;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ErrorSource.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ErrorSource">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;maxLength value="40"/>
 *     &lt;whiteSpace value="collapse"/>
 *     &lt;enumeration value="EXCEPTION"/>
 *     &lt;enumeration value="SELLING LIMITS"/>
 *     &lt;enumeration value="RES VALIDATION"/>
 *     &lt;enumeration value="GUEST VALIDATION"/>
 *     &lt;enumeration value="CHECKIN VALIDATION"/>
 *     &lt;enumeration value="GTB VALIDATION"/>
 *     &lt;enumeration value="INTERNAL VALIDATION"/>
 *     &lt;enumeration value="INTERNAL PROCEDURES"/>
 *     &lt;enumeration value="ACCOUNTING VALIDATIONS"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ErrorSource")
@XmlEnum
public enum ErrorSource {


    /**
     * Unexpected error (exception) in the application
     * 
     */
    EXCEPTION("EXCEPTION"),

    /**
     * Selling Limits restrictions are violated
     * 
     */
    @XmlEnumValue("SELLING LIMITS")
    SELLING_LIMITS("SELLING LIMITS"),

    /**
     * Booking validation error
     * 
     */
    @XmlEnumValue("RES VALIDATION")
    RES_VALIDATION("RES VALIDATION"),

    /**
     * Guest validation error
     * 
     */
    @XmlEnumValue("GUEST VALIDATION")
    GUEST_VALIDATION("GUEST VALIDATION"),

    /**
     * Guest validation error
     * 
     */
    @XmlEnumValue("CHECKIN VALIDATION")
    CHECKIN_VALIDATION("CHECKIN VALIDATION"),

    /**
     * 
     * 						
     * <pre>
     * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xhtml:span xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema" class="warning"&gt;TBD&lt;/xhtml:span&gt;
     * </pre>
     * 
     * 					
     * 
     */
    @XmlEnumValue("GTB VALIDATION")
    GTB_VALIDATION("GTB VALIDATION"),

    /**
     * 
     * 						
     * <pre>
     * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xhtml:span xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema" class="warning"&gt;TBD&lt;/xhtml:span&gt;
     * </pre>
     * 
     * 					
     * 
     */
    @XmlEnumValue("INTERNAL VALIDATION")
    INTERNAL_VALIDATION("INTERNAL VALIDATION"),

    /**
     * 
     * 						
     * <pre>
     * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xhtml:span xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema" class="warning"&gt;TBD&lt;/xhtml:span&gt;
     * </pre>
     * 
     * 					
     * 
     */
    @XmlEnumValue("INTERNAL PROCEDURES")
    INTERNAL_PROCEDURES("INTERNAL PROCEDURES"),
    @XmlEnumValue("ACCOUNTING VALIDATIONS")
    ACCOUNTING_VALIDATIONS("ACCOUNTING VALIDATIONS");
    private final String value;

    ErrorSource(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ErrorSource fromValue(String v) {
        for (ErrorSource c: ErrorSource.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
